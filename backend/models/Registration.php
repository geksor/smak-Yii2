<?php

namespace backend\models;

use Yii;

/**
 * This is the model class for table "registration".
 *
 * @property int $id
 * @property string $name
 * @property string $email
 * @property string $tel
 * @property int $insurance
 * @property int $date
 * @property int $viewed
 */
class Registration extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'registration';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['name', 'email', 'tel', 'insurance'], 'required'],
            [['insurance', 'name', 'email'], 'string'],
            [['date', 'viewed'], 'integer'],
            [['insurance'], 'string', 'max' => 19],
            [['tel'], 'string', 'max' => 18],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'name' => 'Имя',
            'email' => 'Email',
            'tel' => 'Телефон',
            'insurance' => 'Номер полиса',
            'date' => 'Дата',
            'viewed' => 'Viewed',
        ];
    }

    /**
     * Sends an email to the specified email address using the information collected by this model.
     *
     * @param string $email the target email address
     * @return bool whether the email was sent
     */
    public function sendEmail()
    {
        $body = '<h1>Новая заявка на запись</h1>
                <p>
                    <a href="'. Yii::$app->request->hostInfo .'/admin/registration/view/'. $this->id .'">Ссылка на запись</a>
                </p>
                <h2>Короткая информация</h2>
                <p> Имя: '.$this->name.'</p>
                <p> Телефон: '.$this->tel . '</p>';

        return Yii::$app->mailer->compose()
            ->setTo(Yii::$app->params['Params']['email'])
            ->setFrom(['info@smak05.ru' => 'SMAK'])
            ->setSubject('Заявка на запись от: '. $this->name)
            ->setHtmlBody($body)
            ->send();
    }

    public function beforeSave($insert)
    {
        $this->date =
            $this->date
                ? $this->date
                : time();

        $this->insurance = (integer) str_replace(' ', '', $this->insurance);

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

    public function afterSave($insert, $changedAttributes)
    {
        $this->sendEmail();
    }
}
