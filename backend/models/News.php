<?php

namespace backend\models;

use Yii;
use yii\helpers\VarDumper;

/**
 * This is the model class for table "news".
 *
 * @property int $id
 * @property string $title
 * @property string $short_text
 * @property string $full_text
 * @property string $image
 * @property string $create_date
 * @property string $publish_start
 * @property string $publish_end
 * @property int $publish
 */
class News extends \yii\db\ActiveRecord
{
    /**
     * {@inheritdoc}
     */
    public static function tableName()
    {
        return 'news';
    }

    /**
     * {@inheritdoc}
     */
    public function rules()
    {
        return [
            [['title', 'full_text', 'short_text'], 'required'],
            [['title', 'full_text', 'image'], 'string'],
            [['create_date', 'publish_start', 'publish_end'], 'safe'],
            [['publish'], 'integer'],
            [['short_text'], 'string', 'max' => 1000],
        ];
    }

    /**
     * {@inheritdoc}
     */
    public function attributeLabels()
    {
        return [
            'id' => 'ID',
            'title' => 'Заголовок',
            'short_text' => 'Вступительный текст',
            'full_text' => 'Полный текст',
            'image' => 'Изображение',
            'create_date' => 'Дата создания',
            'publish_start' => 'Начало публикации',
            'publish_end' => 'Завершение публикации',
            'publish' => 'Публикация',
        ];
    }

    public function saveImage($fileName)
    {
        $this->image = $fileName;
        return $this->save(false);
    }

    public function getImage()
    {
        return ($this->image) ? '/uploads/images/' . $this->image : '/no_image.jpg';
    }

    public function getThumbImage()
    {
        return ($this->image) ? '/uploads/images/' . 'thumb_' . $this->image : '/no_image.png';
    }

    public function deleteImage()
    {
        $imageUploadModel = new ImageUpload();

        $imageUploadModel->deleteCurrentImage($this->image);
    }

    public function beforeDelete()
    {
        $this->deleteImage();
        return parent::beforeDelete(); // TODO: Change the autogenerated stub
    }

    public function beforeSave($insert)
    {
        if ($this->create_date){

            $this->create_date =
                is_string($this->create_date)
                    ? strtotime($this->create_date)
                    : $this->create_date;
        }else{
            $this->create_date = time();
        }

        if ($this->publish_start){

            $this->publish_start =
                is_string($this->publish_start)
                    ? strtotime($this->publish_start)
                    : $this->publish_start;
        }else{
            $this->publish_start = time();
        }

        if ($this->publish_end){

            $this->publish_end =
                is_string($this->publish_end)
                    ? strtotime($this->publish_end)
                    : $this->publish_end;
        }else{
            $this->publish_end = null;
        }

        return parent::beforeSave($insert); // TODO: Change the autogenerated stub
    }

}
